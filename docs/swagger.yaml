basePath: /api/war-onk
definitions:
  helper.Response:
    properties:
      data: {}
      message:
        type: string
      meta: {}
      status:
        type: integer
    type: object
  presenter.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  presenter.LoginResponse:
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/presenter.UserResponse'
    type: object
  presenter.ProductRequest:
    properties:
      product_name:
        type: string
      product_stock:
        type: integer
      purchase_price:
        type: number
      selling_price:
        type: number
    type: object
  presenter.ProductResponse:
    properties:
      product_name:
        type: string
      product_stock:
        type: integer
      products_id:
        type: integer
      purchase_price:
        type: number
      selling_price:
        type: number
    type: object
  presenter.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  presenter.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        type: string
    type: object
  response.Meta:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      total_data:
        type: integer
      total_page:
        type: integer
    type: object
host: localhost:8085
info:
  contact:
    email: youremail@example.com
    name: Temi Saputra
  description: Documentation for my REST API
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: My REST API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/presenter.LoginResponse'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Login a user
      tags:
      - auth
  /product-create:
    post:
      consumes:
      - application/json
      description: Create a new product
      parameters:
      - description: Product data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.ProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/presenter.ProductResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Create a new product
      tags:
      - Product
  /product/{id}:
    get:
      consumes:
      - application/json
      description: Get Product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/presenter.ProductResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Get Product by ID
      tags:
      - Product
  /products:
    get:
      consumes:
      - application/json
      description: Get All Product
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Keyword for search
        in: query
        name: keyword
        type: string
      - description: Order by field
        in: query
        name: order_by
        type: string
      - description: Order type (asc/desc)
        in: query
        name: order_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/presenter.ProductResponse'
                  type: array
                meta:
                  $ref: '#/definitions/response.Meta'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - BearerAuth: []
      summary: Get All Product
      tags:
      - Product
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/presenter.ProductResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Delete a product
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Update a product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.ProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/presenter.ProductResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Update a product
      tags:
      - Product
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: success
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
